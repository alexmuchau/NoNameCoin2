// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Validator {
  validator_id      String         @id @default(uuid())
  validator_address String         @unique
  host              String?
  flag              Int            @default(0)
  validator_state   ValidatorState @default(INACTIVE)

  address Address @relation(fields: [validator_address], references: [address])

  validator_transactions ValidatorTransaction[]
}

enum ValidatorState {
  INACTIVE
  VALIDATING
  FREE
}

model Address {
  address        String @id
  coins_in_stock Float  @default(0)
  coins_in_stack Float  @default(0)

  validator             Validator?
  sender_transactions   Transaction[] @relation("sender")
  receiver_transactions Transaction[] @relation("receiver")
}

model Transaction {
  trans_id         String           @id @default(uuid())
  sender_address   String
  receiver_address String
  trans_coins      Float
  trans_tax        Float
  trans_timestamp  DateTime
  trans_state      TransactionState @default(NOT_STARTED)

  sender   Address @relation("sender", fields: [sender_address], references: [address])
  receiver Address @relation("receiver", fields: [receiver_address], references: [address])

  validators_transaction ValidatorTransaction[]
}

enum TransactionState {
  NOT_STARTED
  VALIDATING
  DENIED
  APPROVED
}

model ValidatorTransaction {
  trans_id      String
  validator_id  String
  validator_tax Float?
  validation    ValidationState @default(IN_PROGRESS)

  transaction Transaction @relation(fields: [trans_id], references: [trans_id])
  validator   Validator   @relation(fields: [validator_id], references: [validator_id])

  @@id([trans_id, validator_id])
}

enum ValidationState {
  FAILED
  IN_PROGRESS
  APPROVED
  DENIED
}